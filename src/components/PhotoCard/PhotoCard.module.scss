@import '../../styles/scss-variables';
@import '../../styles/functions';

.photoCard {
    position: relative;
    // to prevent <Image /> inline-block style from over/underflowing the card
    display: inline-flex;
    width: 100%;
    margin: 0;
    padding: 0;

    // To keep a nice looking card inside a grid
    img {
        object-fit: cover;
    }
}

.header {
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 1;

    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    width: 100%;
    margin: 0;
    padding: fluidClamp(1, 2);

    background: linear-gradient(
        180deg,
        rgba(var(--rgb-black), 0) 0%,
        var(--color-black) 100%
    );

    @media (hover: hover) and (pointer: fine) {
        opacity: 0;
        transition: opacity .3s ease-in-out;
        top: 0;

        :local(.photoCard:hover) &,
        :local(.photoCard:focus) & {
            opacity: 1;
        }
    }
}

.title {
    display: block;
    width: 100%;
    margin: 0;
    padding: 0;

    font-size: fluidClamp(2.2, 3.8);
    font-family: var(--font-family-head);
    color: var(--color-white);
}

.category {
    position: relative;
    display: block;
    width: 100%;
    margin: 0 0 fluidClamp(1, 3.6);
    padding: 0;

    font-size: fluidClamp(1, 1.4);
    font-family: var(--font-family-base);
    color: var(--color-yellow-400);
    text-transform: uppercase;
    letter-spacing: .6rem;

    &::after {
        content: '';
        display: block;
        width: 9rem;
        height: .2rem;
        margin-top: fluidClamp(1, 3);
        background-color: var(--color-yellow-400);
    }
}

.link {
    position: relative;
    display: block;
    width: 100%;
    height: .1rem;
    max-width: 1.6rem;
    margin: 3rem 0 1rem;

    font: 0/0 sans-serif;

    color: var(--color-gray-400);
    background: currentColor;

    transition: max-width .5s ease, color .2s ease-in-out;

    @media (hover: none) and (pointer: coarse) {
        position: absolute;
        right: 2rem;
    }

    @media (hover: hover) and (pointer: fine) {
        transition-delay: .3s;
    }

    &::before,
    &::after {
        content: '';
        position: absolute;
        right: 0;

        display: block;
        width: .7rem;
        height: .1rem;
        background-color: currentColor;
        transform-origin: center right;
    }

    &::before {
        transform: rotate(-45deg);
    }

    &::after {
        transform: rotate(45deg);
    }

    :local(.photoCard:hover) &,
    :local(.photoCard:focus) & {
        max-width: 4rem;
        color: var(--color-gray-100);
    }
}


