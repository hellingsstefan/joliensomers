@import '../../styles/scss-variables';
@import '../../styles/functions';

.jumbotronSlider {
    position: relative;
    box-sizing: border-box;
    display: block;

    box-sizing: border-box;
    width: 100%;
    margin-bottom: 5rem;
    padding-bottom: 2rem;
    padding-inline: var(--base-padding);

    background-color: var(--color-black);
}

.slider {
    position: relative;
    display: block;
    height: fluidClamp_vh(45, 75);
}

.slide {
    position: absolute;
    z-index: -1;

    display: block;
    width: 100%;
    height: 100%;
    opacity: 0;
}

.current {
    opacity: 1;
    z-index: 1;

    transition: opacity 0 .4s linear;
}

.image {
    position: relative;

    box-sizing: border-box;
    display: grid;
    grid-template-columns: auto minmax(1rem, 144rem) auto;
    overflow: hidden;

    width: 100vw;
    height: min(100%, 85vh);
    margin: 0 0 0 calc(var(--base-padding) * -1);
    padding: 0 0 0 15vw;

    overflow: hidden;

    // To keep a nice looking card inside a grid
    img {
        object-fit: cover;

        transition:
            transform .5s ease,
            opacity .5s .5s ease;

        transform: scale(1.1);
        opacity: .5;

        :local(.current) & {
            transform: scale(1);
            opacity: 1;

            transition:
                transform .5s ease,
                opacity .5s 0s ease;
        }
    }

    & > * {
        grid-column-start: 2;
        grid-column-end: 4;
    }
}

.label {
    position: absolute;
    bottom: 0;
    left: 0;

    display: block;
    width: calc(100% + var(--base-padding));

    background-color: red;
    background: linear-gradient(
        to bottom,
        rgba(var(--rgb-black), 0),
        rgba(var(--rgb-black), 1)
    );

    & > * {
        position: relative;
        transform: translateY(-2rem);
        opacity: 0;
        overflow: hidden;

        :local(.current) & {
            transform: translateY(0);
            opacity: 1;

            transition:
                transform .6s ease-out,
                opacity .7s ease;
        }

        @for $i from 0 through 5 {
            &:nth-child(#{$i + 1}) {
                transition-delay: 0.2s * $i;
            }
        }
    }
}

.controls {
    display: flex;
    justify-content: flex-end;
    gap: 1.5rem;

    width: 100%;
    padding-block: 1rem;
}

.button {
    position: relative;

    display: inline-flex;
    width: 2.4rem;
    height: 2.4rem;
    margin: 0;
    padding: 0;

    font-size: 2.4rem;
    color: var(--color-gray-400);
    background: none;
    border: none;
    outline: none;
    cursor: pointer;

    transition: color .2s ease-in-out;

    &:hover,
    &:focus {
        color: var(--color-gray-100)
    }
}
